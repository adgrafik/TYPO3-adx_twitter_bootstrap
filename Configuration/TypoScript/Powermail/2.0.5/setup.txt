
config.tx_extbase {
	persistence {
		classes {

			# Using mixed-ins hack from Franz Koch to make map table extendable.
			# @see http://lists.typo3.org/pipermail/typo3-project-typo3v4mvc/2010-September/006497.html
			Tx_Powermail_Domain_Model_Pages {
				mapping.recordType = 0
				subclasses.0 = Tx_AdxTwitterBootstrap_Domain_Model_Pages
			}

			Tx_AdxTwitterBootstrap_Domain_Model_Pages {
				mapping {
					tableName = tx_powermail_domain_model_pages
					recordType = 0
					columns {
						tx_adxtwitterbootstrap_hide_legend.mapOnProperty = hideLegend
						tx_adxtwitterbootstrap_offset.mapOnProperty = offset
						tx_adxtwitterbootstrap_span.mapOnProperty = span
						tx_adxtwitterbootstrap_end_of_row.mapOnProperty = endOfRow
					}
				}
			}

			Tx_Powermail_Domain_Model_Fields {
				mapping.recordType = 0
				subclasses.0 = Tx_AdxTwitterBootstrap_Domain_Model_Fields
			}

			Tx_AdxTwitterBootstrap_Domain_Model_Fields {
				mapping {
					tableName = tx_powermail_domain_model_fields
					recordType = 0
					columns {
						tx_adxtwitterbootstrap_offset.mapOnProperty = offset
						tx_adxtwitterbootstrap_span.mapOnProperty = span
						tx_adxtwitterbootstrap_end_of_row.mapOnProperty = endOfRow
					}
				}
			}
		}
	}
}

plugin.tx_powermail {

	view {
		templateRootPath = EXT:adx_twitter_bootstrap/Resources/Private/Templates/Powermail/2.0.5/Templates/
		partialRootPath = EXT:adx_twitter_bootstrap/Resources/Private/Templates/Powermail/2.0.5/Partials/
		layoutRootPath = EXT:adx_twitter_bootstrap/Resources/Private/Templates/Powermail/2.0.5/Layouts/
	}
}

lib.tx_adxtwitterbootstrap {

	powermail {

		fieldsetClasses = COA
		fieldsetClasses {

			10 = TEXT
			10.field = offset
			10.fieldRequired = offset
			10.noTrimWrap = | offset||

			20 = TEXT
			20.field = span
			20.fieldRequired = span
			20.noTrimWrap = | span||
		}

		fieldClasses < .fieldsetClasses

		itemClasses = COA
		itemClasses {
			10 = TEXT
			10.value = {$plugin.tx_adxtwitterbootstrap.variables.gridColumns}
			10.fieldRequired = span
			10.noTrimWrap = | span||
		}

		fieldsetRowStartTag = COA
		fieldsetRowStartTag {

			# Start the row class if counter is empty.
			10 = TEXT
			10 {
				value = <div class="row-fluid">
				if.isFalse.data = register: countSpan
			}

			# Add current span value to total columns.
			20 = LOAD_REGISTER
			20.countSpan.stdWrap.dataWrap = {field: span} + {field: offset} + {register: countSpan}
			20.countSpan.prioriCalc = 1

			# Reset counter if total columns reached.
			30 = TEXT
			30 {
				if.value = {$plugin.tx_adxtwitterbootstrap.variables.gridColumns} - 1
				if.value.prioriCalc = 1

				if.isGreaterThan.data = register: countSpan

				append = LOAD_REGISTER
				append.countSpan = 0
			}
		}

		# Close row if counter is empty.
		fieldsetRowEndTag = TEXT
		fieldsetRowEndTag {
			value = </div>
			if.value = 0
			if.isGreaterThan.data = register: countSpan
			if.isFalse.field = isLast
			if.negate = 1
		}

		controlsRowStartTag = COA
		controlsRowStartTag {

			# Start the row class if counter is empty.
			10 = TEXT
			10 {
				value = <div class="control-group clearfix">
				if.isFalse.data = register: countControlSpan

				override = <div class="control-group clearfix">
				override.if.value = columnFull,columnHalfSingleRow,columnThirdSingleRow,columnTwoThirdSingleRow,columnQuarterSingleRow,columnTwoQuarterSingleRow,columnThreeQuarterSingleRow
				override.if.isInList.field = css
			}

			# Add current span value to total columns.
			20 = LOAD_REGISTER
			20.countControlSpan.stdWrap.dataWrap = {field: span} + {field: offset} + {register: countControlSpan}
			20.countControlSpan.prioriCalc = 1

			# Reset counter if total columns reached.
			30 = TEXT
			30 {
				if.value = {$plugin.tx_adxtwitterbootstrap.variables.gridColumns} - 1
				if.value.prioriCalc = 1

				if.isGreaterThan.data = register: countControlSpan
				if.isGreaterThan.override = {$plugin.tx_adxtwitterbootstrap.variables.gridColumns}
				if.isGreaterThan.override.if.value = columnFull,columnHalfSingleRow,columnThirdSingleRow,columnTwoThirdSingleRow,columnQuarterSingleRow,columnTwoQuarterSingleRow,columnThreeQuarterSingleRow
				if.isGreaterThan.override.if.isInList.field = css

				append = LOAD_REGISTER
				append.countControlSpan = 0
			}
		}

		# Close row if counter is empty.
		controlsRowEndTag = TEXT
		controlsRowEndTag {
			value = </div>
			if.value = 0
			if.isGreaterThan.data = register: countControlSpan
			if.isFalse.field = isLast
			if.negate = 1
		}
	}
}