
/**
 * Shortcut definitions for the accordion
 */
lib.adxtwitterbootstrap.accordion {

	render {

		heading = TEXT
		heading {

			required = 1
			field = header
			htmlSpecialChars = 1

			outerWrap = <span class="header"> | </span>
			outerWrap.insertData = 1
		}

		content =< tt_content
	}

	activeClass = TEXT
	activeClass {
		value = in
		if.value.field = active
		if.equals.stdWrap.dataWrap = {field: key} + 1
		if.equals.prioriCalc = 1
		noTrimWrap = | ||
	}
}

/**
 * Accordion setup
 */
plugin.tx_gridelements_view.setup.tx_adxtwitterbootstrap_accordion {

	cObject = FLUIDTEMPLATE
	cObject {

		file = {$plugin.tx_adxtwitterbootstrap.accordion.templateFile}

		variables {

			layout = TEXT
			layout {
				field = flexform_tx_adxtwitterbootstrap_accordion_layout
				required = 1
				noTrimWrap = | ||
			}

			columns = TEXT
			columns.field = flexform_tx_adxtwitterbootstrap_accordion_columns

			span = TEXT
			span {
				stdWrap.dataWrap = {$plugin.tx_adxtwitterbootstrap.variables.gridColumns} / {field: flexform_tx_adxtwitterbootstrap_accordion_columns}
				prioriCalc = 1
				noTrimWrap = | span||
			}

			active = TEXT
			active.field = flexform_tx_adxtwitterbootstrap_accordion_active

			collapsible = TEXT
			collapsible.field = flexform_tx_adxtwitterbootstrap_accordion_collapsible

			slideToPosition = TEXT
			slideToPosition.field = flexform_tx_adxtwitterbootstrap_accordion_slide_to_position

			slideOffset = TEXT
			slideOffset.field = flexform_tx_adxtwitterbootstrap_accordion_slide_offset
		}
	}
}